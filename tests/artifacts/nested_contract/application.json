{
    "hints": {
        "doMath(uint64,uint64,string)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "txnArg(pay)address": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "helloWorld()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "methodArg(appl)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "nestedTxnArg(pay,appl)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "doubleNestedTxnArg(pay,appl,pay,appl)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "createApplication()void": {
            "call_config": {
                "no_op": "CREATE"
            }
        }
    },
    "bare_call_config": {
        "no_op": "NEVER",
        "opt_in": "NEVER",
        "close_out": "NEVER",
        "update_application": "NEVER",
        "delete_application": "NEVER"
    },
    "schema": {
        "local": {
            "declared": {},
            "reserved": {}
        },
        "global": {
            "declared": {},
            "reserved": {}
        }
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
    },
    "contract": {
        "name": "TestContract",
        "desc": "",
        "methods": [
            {
                "name": "doMath",
                "desc": "A method that takes two numbers and does either addition or subtraction",
                "args": [
                    {
                        "name": "a",
                        "type": "uint64",
                        "desc": "The first number"
                    },
                    {
                        "name": "b",
                        "type": "uint64",
                        "desc": "The second number"
                    },
                    {
                        "name": "operation",
                        "type": "string",
                        "desc": "The operation to perform. Can be either 'sum' or 'difference'"
                    }
                ],
                "returns": {
                    "type": "uint64",
                    "desc": "The result of the operation"
                }
            },
            {
                "name": "txnArg",
                "args": [
                    {
                        "name": "txn",
                        "type": "pay"
                    }
                ],
                "returns": {
                    "type": "address"
                }
            },
            {
                "name": "helloWorld",
                "args": [],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "methodArg",
                "args": [
                    {
                        "name": "call",
                        "type": "appl"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "nestedTxnArg",
                "args": [
                    {
                        "name": "txn",
                        "type": "pay"
                    },
                    {
                        "name": "call",
                        "type": "appl"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "doubleNestedTxnArg",
                "args": [
                    {
                        "name": "txn0",
                        "type": "pay"
                    },
                    {
                        "name": "call1",
                        "type": "appl"
                    },
                    {
                        "name": "txn2",
                        "type": "pay"
                    },
                    {
                        "name": "call3",
                        "type": "appl"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "createApplication",
                "args": [],
                "returns": {
                    "type": "void"
                }
            }
        ]
    }
}
