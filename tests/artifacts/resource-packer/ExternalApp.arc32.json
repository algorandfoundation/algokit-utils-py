{
  "hints": {
    "optInToApplication()void": {
      "call_config": {
        "opt_in": "CALL"
      }
    },
    "dummy()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "error()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "boxWithPayment(pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createAsset()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "senderAssetBalance()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createBoxInNewApp(pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {
        "localKey": {
          "type": "bytes",
          "key": "localKey"
        }
      },
      "reserved": {}
    },
    "global": {
      "declared": {
        "asa": {
          "type": "uint64",
          "key": "asa"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 1
    },
    "local": {
      "num_byte_slices": 1,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "ExternalApp",
    "desc": "",
    "methods": [
      {
        "name": "optInToApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "dummy",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "error",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "boxWithPayment",
        "args": [
          {
            "name": "_payment",
            "type": "pay"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createAsset",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "senderAssetBalance",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createBoxInNewApp",
        "args": [
          {
            "name": "mbrPayment",
            "type": "pay"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}