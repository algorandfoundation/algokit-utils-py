name: Check Python Code

on:
  workflow_call:

jobs:
  check-python:
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Set up Poetry
        uses: ./.github/actions/setup-poetry

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Audit with pip-audit
        run: |
          # audit non dev dependencies, no exclusions
          poetry export --without=dev > requirements.txt && poetry run pip-audit -r requirements.txt

          # audit all dependencies, with exclusions. 
          # If a vulnerability is found in a dev dependency without an available fix,
          # it can be temporarily ignored by adding --ignore-vuln e.g.
          # --ignore-vuln "GHSA-hcpj-qp55-gfph" # GitPython vulnerability, dev only dependency
          poetry run pip-audit

      - name: Check formatting with Ruff
        run: |
          # stop the build if there are files that don't meet formatting requirements
          poetry run ruff format --check .

      - name: Check linting with Ruff
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run ruff check .

      - name: Check types with mypy
        run: poetry run mypy

      - name: Check docstrings are up to date
        run: poetry run poe docstrings-check

      # TODO: Restore before prod release of v3
      # - name: Check docs are up to date
      #   run: |
      #     poetry run poe docs-md-only
      #     git diff --exit-code ':!docs/markdown/autoapi/index.md' ':!docs/markdown/autoapi/algokit_utils/applications/app_factory/index.md' docs
