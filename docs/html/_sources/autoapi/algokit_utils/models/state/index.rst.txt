algokit_utils.models.state
==========================

.. py:module:: algokit_utils.models.state


Attributes
----------

.. autoapisummary::

   algokit_utils.models.state.TealTemplateParams
   algokit_utils.models.state.BoxIdentifier


Classes
-------

.. autoapisummary::

   algokit_utils.models.state.BoxName
   algokit_utils.models.state.BoxValue
   algokit_utils.models.state.DataTypeFlag
   algokit_utils.models.state.BoxReference


Module Contents
---------------

.. py:class:: BoxName

   The name of the box


   .. py:attribute:: name
      :type:  str

      The name of the box as a string



   .. py:attribute:: name_raw
      :type:  bytes

      The name of the box as raw bytes



   .. py:attribute:: name_base64
      :type:  str

      The name of the box as a base64 encoded string



.. py:class:: BoxValue

   The value of the box


   .. py:attribute:: name
      :type:  BoxName

      The name of the box



   .. py:attribute:: value
      :type:  bytes

      The value of the box as raw bytes



.. py:class:: DataTypeFlag

   Bases: :py:obj:`enum.IntEnum`


   Enum where members are also (and must be) ints


   .. py:attribute:: BYTES
      :value: 1



   .. py:attribute:: UINT
      :value: 2



.. py:data:: TealTemplateParams
   :type:  TypeAlias
   :value: Mapping[str, str | int | bytes] | dict[str, str | int | bytes]


.. py:data:: BoxIdentifier
   :type:  TypeAlias
   :value: str | bytes | AccountTransactionSigner


.. py:class:: BoxReference(app_id: int, name: bytes | str)

   Bases: :py:obj:`algosdk.box_reference.BoxReference`


   Represents a box reference with a foreign app index and the box name.

   Args:
       app_index (int): index of the application in the foreign app array
       name (bytes): key for the box in bytes


