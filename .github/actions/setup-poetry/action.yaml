name: "Python Poetry Action"
description: "An action to setup Poetry"
runs:
  using: "composite"
  steps:
    # A workaround for pipx isn't installed on M1 runner.
    # We should remove it after this issue is resolved.
    # https://github.com/actions/runner-images/issues/9256
    - if: ${{ runner.os == 'macOS' && runner.arch == 'ARM64' }}
      run: |
        pip install poetry
        pip install poetry-plugin-export
      shell: bash

    # NOTE: Below commands currently causes a faulty behaviour in pipx where
    # preinstalled pipx on github worker has shared venv instantiated via python 3.10
    # however 2 of the above commands are supposed to reinstall pipx and use python version
    # specified in setup-python, however shared venv still uses 3.10 hence algokit fails on
    # pkgutil.ImpImporter module not found error.
    # To be approached as given until further clarified on corresponding issues on pipx repo.
    # ------
    # pip install --user pipx
    # pipx ensurepath
    # ------
    - if: ${{ runner.os != 'macOS' || runner.arch != 'ARM64' }}
      run: |
        pipx install poetry ${{ runner.os == 'macOS' && '--python "$Python_ROOT_DIR/bin/python"' || '' }}
        pipx inject poetry poetry-plugin-export
      shell: bash

    - name: Get full Python version
      id: full-python-version
      shell: bash
      run: echo "full_version=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:3])))')" >> $GITHUB_OUTPUT

    - name: Setup poetry cache
      uses: actions/cache@v4
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}-${{ runner.os }}-${{ runner.arch }}-${{ steps.full-python-version.outputs.full_version }}
